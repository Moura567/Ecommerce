@model IEnumerable<WebApplication1.Models.product>

<script src="~/js/Order.js"></script>

<table id="productTable" class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Id)</th>
            <th>@Html.DisplayNameFor(model => model.Name)</th>
            <th>@Html.DisplayNameFor(model => model.Description)</th>
            <th>@Html.DisplayNameFor(model => model.price)</th>
            <th>@Html.DisplayNameFor(model => model.amount)</th>
            <th>@Html.DisplayNameFor(model => model.categoryId)</th>
            <th>@Html.DisplayNameFor(model => model.image)</th>
            <th style="width: 250px;"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr data-name="@item.Name.ToLower()" data-description="@item.Description.ToLower()" data-category-id="@item.categoryId">
                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>@item.price.ToString("C")</td>
                <td><span class="amount" id="amount_@item.Id">@item.amount.ToString("N0")</span></td>
                <td>
                    @if (item != null)
                    {
                        var category = catgoryrepo.GetByID(item.categoryId).Name;
                        @Html.DisplayFor(modelItem => category)
                    }
                </td>
                <td><img src="~/images/@item.image" width="80px" height="100px" /></td>
                 @if (User.IsInRole("Admin") || User.IsInRole("Dealer"))
  {
      <td>
          @Html.ActionLink(
                   "Edit",
                   "Edit",
                   new { id = item.Id },
                   new { @class = "btn btn-primary" }
                   )
          @Html.ActionLink(
                   "Details",
                   "Details",
                   new { id = item.Id },
                   new { @class = "btn btn-info" }
                   )
          @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
      </td>
  }
  else
  {

      <td>
          <div class="d-flex align-items-center">
              <form action="/Cart/AddToCart" method="post" onsubmit="return submitAddToCartForm(this);" class="me-2">
                  @Html.AntiForgeryToken()
                  <input type="hidden" name="cartId" value="@ViewBag.CartId" />
                  <input type="hidden" name="productId" value="@item.Id" />
                  <input type="hidden" name="quantity" value="1" />
                  <button type="submit" class="btn btn-primary">+</button>
              </form>


              <form action="/Cart/RemoveFromCart" method="post" onsubmit="return submitRemoveFromCartForm(this);" class="ms-2">
                  @Html.AntiForgeryToken()
                  <input type="hidden" name="cartId" value="@ViewBag.CartId" />
                  <input type="hidden" name="productId" value="@item.Id" />
                  <input type="hidden" name="quantity" value="1" />
                  <button type="submit" class="btn btn-danger">-</button>
              </form>

          </div>

      </td>
  }
            </tr>
        }
    </tbody>
</table>